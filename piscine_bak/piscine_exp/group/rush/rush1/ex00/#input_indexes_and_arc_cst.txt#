argv[1] 0 1 2 3 4 5 6 7 8
argv[2] 0 1 2 3 4 5 6 7 8
argv[3] 0 1 2 3 4 5 6 7 8
argv[4] 0 1 2 3 4 5 6 7 8
argv[5] 0 1 2 3 4 5 6 7 8
argv[6] 0 1 2 3 4 5 6 7 8
argv[7] 0 1 2 3 4 5 6 7 8
argv[8] 0 1 2 3 4 5 6 7 8
argv[9] 0 1 2 3 4 5 6 7 8

blocks start
	argv[1][0]  argv[1][3]  argv[1][6]

	argv[4][0]  argv[4][3]  argv[4][6]

	argv[7][0]  argv[7][3]  argv[7][6]

blocks end
	argv[3][2]  argv[3][5]  argv[3][8]
	argv[6][2]  argv[6][5]  argv[6][8]
	argv[9][2]  argv[9][5]  argv[9][8]

consistency check:
loop argv[1-9][0]
loop argv[1-9][1]
loop argv[1-9][2]
loop argv[1-9][3]
...

loop argv[1][0-8]
loop argv[2][0-8]
loop argv[3][0-8]
...
loop argv[1-3][0-2]
loop argv[1-3][3-5]
loop argv[1-3][6-8]
loop argv[4-6][0-2]
...

checkBlock printf tests:
			printf("check: { %d, %d, %d, %d, %d, %d, %d, %d, %d }\n", check[0], check[1], check[2], check[3], check[4], check[5], check[6], check[7], check[8]);
			printf("j: %d, i: %d, blocknum: %d, block_x_os: %d, block_y_os: %d\n", j, i, blocknum, block_x_os, block_y_os);

int strlen(char *str)
{
	if (*str)
	   return (1 + strlen(str + 1));
	return (0);
}

int strlen(char *str)
{
		return (*str ? (1 + strlen(str + 1)) : 0);
}