{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf470
{\fonttbl\f0\fmodern\fcharset0 Courier;\f1\fmodern\fcharset0 Courier-Bold;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;}
\margl1440\margr1440\vieww25060\viewh28500\viewkind0
\deftab720
\pard\pardeftab720\sl280\partightenfactor0

\f0\fs24 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 LEVEL 0\
\
Assignment name  : aff_a\
Expected files   : aff_a.c\
Allowed functions: write\
--------------------------------------------------------------------------------\
\
Write a program that takes a string, and displays the first 'a' character it\
encounters in it, 
\f1\b followed by a newline
\f0\b0 . 
\f1\b If there are no 'a' characters in the\
string, the program just writes a newline
\f0\b0 . 
\f1\b If the number of parameters is not\
1, the program displays 'a' followed by a newline
\f0\b0 .\
\
Example:\
\
$> ./aff_a "abc" | cat -e\
a$\
$> ./aff_a "dubO a POIL" | cat -e\
a$\
$> ./aff_a "zz sent le poney" | cat -e\
$\
$> ./aff_a | cat -e\
a$\
\
\
Assignment name  : ft_countdown\
Expected files   : ft_countdown.c\
Allowed functions: write\
--------------------------------------------------------------------------------\
\
Write a program that displays all digits in descending order, 
\f1\b followed by a\
newline.
\f0\b0 \
\
Example:\
$> ./ft_countdown | cat -e\
9876543210$\
$>\
\
\
Assignment name  : ft_print_numbers\
Expected files   : ft_print_numbers.c\
Allowed functions: write\
--------------------------------------------------------------------------------\
\
Write a function that displays all digits in ascending order.\
\
Your function must be declared as follows:\
\
void	ft_print_numbers(void);\
\
\
Assignment name  : maff_alpha\
Expected files   : maff_alpha.c\
Allowed functions: write\
--------------------------------------------------------------------------------\
\
Write a program that displays the alphabet, with even letters in uppercase, and\
odd letters in lowercase, 
\f1\b followed by a newline.
\f0\b0 \
\
Example:\
\
$> ./maff_alpha | cat -e\
aBcDeFgHiJkLmNoPqRsTuVwXyZ$\
\
\
Assignment name  : aff_last_param\
Expected files   : aff_last_param.c\
Allowed functions: write\
--------------------------------------------------------------------------------\
\
Write a program that takes strings as arguments, and displays its last\
argument followed by a newline.\
\
If the number of arguments is less than 1, the program displays a newline.\
\
Examples:\
\
$> ./aff_last_param "zaz" "mange" "des" "chats" | cat -e\
chats$\
$> ./aff_last_param "j'aime le savon" | cat -e\
j'aime le savon$\
$> ./aff_last_param\
$\
\
\
Assignment name  : aff_z\
Expected files   : aff_z.c\
Allowed functions: write\
--------------------------------------------------------------------------------\
\
Write a program that takes a string, and displays the first 'z'\
character it encounters in it, 
\f1\b followed by a newline. If there are no\
'z' characters in the string, the program writes 'z' followed\
by a newline. If the number of parameters is not 1, the program displays\
'z' followed by a newline.\

\f0\b0 \
Example:\
\
$> ./aff_z "abc" | cat -e\
z$\
$> ./aff_z "dubO a POIL" | cat -e\
z$\
$> ./aff_z "zaz sent le poney" | cat -e\
z$\
$> ./aff_z | cat -e\
z$\
\
\pard\pardeftab720\sl280\partightenfactor0
\cf0 \outl0\strokewidth0 \
\
Assignment name  : only_a\
Expected files   : only_a.c\
Allowed functions: write\
--------------------------------------------------------------------------------\
\
Write a program that displays an 'a' character on the standard output.\
\
\
Assignment name  : only_z\
Expected files   : only_z.c\
Allowed functions: write\
--------------------------------------------------------------------------------\
\
Write a program that displays a 'z' character on the standard output.\
\pard\pardeftab720\sl280\partightenfactor0
\cf2 \outl0\strokewidth0 \strokec2 \
}